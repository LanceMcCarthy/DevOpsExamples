# This example shows you how ot use Akeyless to fetch the required secrets instead of GitHub Actions secrets
name: Console (.NET)

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - "console/*"
    paths:
      - 'src/Console/**/*'
      - '.github/workflows/main_build-console.yml' 

env:
  CSPROJ_PATH: src/Console/MyDocProcApp/MyDocProcApp.csproj
  NUGETCONFIG_PATH: src/NuGet.Config
  BUILD_CONFIGURATION: Release

jobs:
  build_console:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        os: [linux, win]
        config: [x64, arm64]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Update NuGet Package Sources
      run: dotnet nuget update source 'Telerik_v3_Feed' -s 'https://nuget.telerik.com/v3/index.json' -u "api-key" -p ${{secrets.TELERIK_NUGET_KEY}} --configfile ${{env.NUGETCONFIG_PATH}} --store-password-in-clear-text

    - name: Restore NuGet packages
      run: dotnet restore ${{env.CSPROJ_PATH}} --configfile ${{env.NUGETCONFIG_PATH}} --runtime ${{matrix.os}}-${{matrix.config}}

    - name: Build project
      run: dotnet build ${{env.CSPROJ_PATH}} --configuration ${{env.BUILD_CONFIGURATION}} --runtime ${{matrix.os}}-${{matrix.config}} --no-self-contained --no-restore
      env:
        TELERIK_LICENSE: ${{secrets.TELERIK_LICENSE_KEY}}
