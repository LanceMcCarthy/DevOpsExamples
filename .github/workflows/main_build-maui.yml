name: Build MAUI Project

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'

jobs:
# ********************** MAUI Android build ************************* #
  maui-android:
    runs-on: windows-latest
    env:
      ProjectPath: src/MAUI/HelloMaui/HelloMaui.csproj
      SolutionPath: src/MAUI/DemoApp.sln
      NuGetConfigPath: src/MAUI/NuGet.Config
      BuildConfig: Debug
      IsRunningOnCI: true
      DotNetVersion: 6.0.100-rc.1.21458.32
      DotNet.Cli.Telemetry.OptOut: true
      MauiCheckVersion: 0.8.6
      MauiCheckManifest: https://raw.githubusercontent.com/Redth/dotnet-maui-check/main/manifests/maui-dev.manifest.json
      Actions_Allow_Unsecure_Commands: true # Allows env variables on the job-level
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Generate version number
      shell: pwsh
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $ver = $buildDay + "." + $env:GITHUB_RUN_NUMBER + ".0"
        echo "APP_VERSION=$ver" >> $GITHUB_ENV

    - name: Install .NET 6 SDK
      shell: pwsh
      run: |
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1
        & .\dotnet-install.ps1 -Version $env:DotNetVersion -InstallDir "$env:ProgramFiles\dotnet\" -Verbose
        & dotnet --list-sdks

    - name: Run maui check
      shell: pwsh
      run: |
        & dotnet tool update --global redth.net.maui.check --version $env:MauiCheckVersion --add-source https://api.nuget.org/v3/index.json
        & maui-check --ci --non-interactive --fix --skip androidsdk --skip xcode --skip vswin --skip vsmac --manifest $env:MauiCheckManifest

    - name: Restore NuGet packages
      shell: pwsh
      run: |
        dotnet restore $env:ProjectPath --configfile $env:NuGetConfigPath
      env:
        TELERIK_USERNAME: ${{ secrets.MyTelerikAccountUsername }}
        TELERIK_PASSWORD: ${{ secrets.MyTelerikAccountPassword }}  

    - name: Build Maui project
      shell: pwsh
      run: dotnet build $env:SolutionPath -c $env:BuildConfig -t net6.0-android --no-restore
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: maui-windows-android-artifacts
        path: '*Android\**\*-Signed.apk'

# ********************** MAUI iOS Build ************************* #

  maui-ios:
    runs-on: macos-latest
    env:
      ProjectPath: src/MAUI/HelloMaui/HelloMaui.csproj
      SolutionPath: src/MAUI/DemoApp.sln
      NuGetConfigPath: src/MAUI/NuGet.Config
      IsRunningOnCI: true
      DotNetVersion: 6.0.100-rc.1.21458.32
      DotNet.Cli.Telemetry.OptOut: true
      MauiCheckVersion: 0.8.6
      MauiCheckManifest: https://raw.githubusercontent.com/Redth/dotnet-maui-check/main/manifests/maui-dev.manifest.json
      Actions_Allow_Unsecure_Commands: true # Allows env variables on the job-level

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Generate version number
      shell: bash
      run: |
        buildDay=`date +%Y.%m%d`
        echo $buildDay
        runNum=${{ github.run_number }}
        ver="${buildDay}.${runNum}.0"
        echo $ver
        echo "APP_VERSION=$ver" >> $GITHUB_ENV

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true

    - name: Restore NuGet packages
      shell: bash
      run: |
        dotnet restore $env:ProjectPath --configfile $env:NuGetConfigPath
      env:
        TELERIK_USERNAME: ${{ secrets.MyTelerikAccountUsername }}
        TELERIK_PASSWORD: ${{ secrets.MyTelerikAccountPassword }}
    
    - name: Build iOS Solution
      shell: bash
      run: dotnet build $env:SolutionPath -c Debug -t net6.0-ios --no-restore
    
    - name: Upload iOS build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: maui-ios-artifacts
        path: '*iOS/**/*.app/**'

# ********************** Future MAUI Windows build ************************* #
  # maui-windows:
  #   runs-on: windows-latest
  #   env:
  #     ProjectPath: src/MAUI/HelloMaui/HelloMaui.csproj
  #     SolutionPath: src/MAUI/DemoApp.sln
  #     NuGetConfigPath: src/MAUI/NuGet.Config
  #     BuildConfig: Debug
  #     IsRunningOnCI: true
  #     DotNetVersion: 6.0.100-rc.1.21458.32
  #     DotNet.Cli.Telemetry.OptOut: true
  #     MauiCheckVersion: 0.8.6
  #     MauiCheckManifest: https://raw.githubusercontent.com/Redth/dotnet-maui-check/main/manifests/maui-dev.manifest.json
  #     Actions_Allow_Unsecure_Commands: true # Allows env variables on the job-level
    
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0

  #   - name: Generate version number
  #     shell: pwsh
  #     run: |
  #       $buildDay = Get-Date -Format "yyyy.Mdd"
  #       $ver = $buildDay + "." + $env:GITHUB_RUN_NUMBER + ".0"
  #       echo "APP_VERSION=$ver" >> $GITHUB_ENV

  #   - name: Install .NET 6 SDK
  #     shell: pwsh
  #     run: |
  #       $ProgressPreference = 'SilentlyContinue'
  #       Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1
  #       & .\dotnet-install.ps1 -Version $env:DotNetVersion -InstallDir "$env:ProgramFiles\dotnet\" -Verbose
  #       & dotnet --list-sdks

  #   - name: Run maui check
  #     shell: pwsh
  #     run: |
  #       & dotnet tool update --global redth.net.maui.check --version $env:MauiCheckVersion --add-source https://api.nuget.org/v3/index.json
  #       & maui-check --ci --non-interactive --fix --skip androidsdk --skip xcode --skip vswin --skip vsmac --manifest $env:MauiCheckManifest

  #   - name: Restore NuGet packages
  #     shell: pwsh
  #     run: |
  #       dotnet restore $env:ProjectPath --configfile $env:NuGetConfigPath
  #     env:
  #       TELERIK_USERNAME: ${{ secrets.MyTelerikAccountUsername }}
  #       TELERIK_PASSWORD: ${{ secrets.MyTelerikAccountPassword }}  

  #   - name: Build Maui project
  #     shell: pwsh
  #     run: dotnet build $env:SolutionPath -c $env:BuildConfig --no-restore
    
  #   - name: Upload build artifacts
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: maui-windows-artifacts
  #       path: '*Android\**\*-Signed.apk'
